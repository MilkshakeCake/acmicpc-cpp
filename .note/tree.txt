struct Node {
    <template T> left;
    <template T> right;
};

int N;
vt<Node> tree(N);

//전위 순회(preorder) : 루트 - 왼쪽 - 오른쪽
void preorder(<template T> root) {
    if(root == '.') return;

    cout << root;
    preorder(tree[root - 'A'].left);
    preorder(tree[root - 'A'].right);
}

//중위 순회(inorder) : 왼쪽 - 루트 - 오른쪽
void inorder(<template T> root) {
    if(root == '.') return;

    inorder(tree[root - 'A'].left);
    cout << root;
    inorder(tree[root - 'A'].right);
}

//후위 순회(postorder) : 왼쪽 - 오른쪽 - 루트
void postorder(<template T> root) {
    if(root == '.') return;

    postorder(tree[root - 'A'].left);
    postorder(tree[root - 'A'].right);
    cout << root;
}